name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest

    - name: Run tests
      run: |
        PYTHONPATH=$(pwd) pytest



  terraform:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      ec2_ip: ${{ steps.set-ip.outputs.ec2_ip }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Prepare SSH keys
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        echo "${{ secrets.EC2_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
        chmod 600 ~/.ssh/id_rsa

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: Terraform Apply
      working-directory: ./terraform
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform apply -auto-approve

    - name: Get EC2 IP
      id: set-ip
      run: echo "ec2_ip=$(terraform output -raw ec2_ip)" >> $GITHUB_OUTPUT

  deploy:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy to EC2
        run: |
          IP=${{ needs.terraform.outputs.ec2_ip }}
          echo "Deploying to $IP"
          scp -o StrictHostKeyChecking=no -r app ec2-user@$IP:/home/ec2-user/
          ssh -o StrictHostKeyChecking=no ec2-user@$IP << 'EOF'
            pip3 install fastapi uvicorn
            nohup uvicorn app.main:app --host 0.0.0.0 --port 80 &
          EOF